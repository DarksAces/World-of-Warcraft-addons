name: Upload Addons to CurseForge

on:
  push:
    paths:
      - 'Alpha/**'
      - 'Beta/**'
      - 'Release/**'
  workflow_dispatch:

jobs:
  upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect release type and changed addons
        id: detect
        run: |
          echo "üïµÔ∏è Detecting changed folder..."
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          echo "$CHANGED_FILES"

          TYPE=""
          BASE=""
          if echo "$CHANGED_FILES" | grep -q '^Alpha/'; then
            TYPE="alpha"
            BASE="Alpha"
          elif echo "$CHANGED_FILES" | grep -q '^Beta/'; then
            TYPE="beta"
            BASE="Beta"
          elif echo "$CHANGED_FILES" | grep -q '^Release/'; then
            TYPE="release"
            BASE="Release"
          else
            echo "‚ùå No release folder detected."
            exit 1
          fi

          # Detect which addons changed inside that folder
          ADDONS=$(echo "$CHANGED_FILES" | grep "^$BASE/" | cut -d/ -f2 | sort -u)
          echo "type=$TYPE" >> $GITHUB_OUTPUT
          echo "base=$BASE" >> $GITHUB_OUTPUT
          echo "addons=$ADDONS" >> $GITHUB_OUTPUT

          echo "üì¶ Changed addons: $ADDONS"

      - name: Upload changed addons
        if: steps.detect.outputs.addons != ''
        env:
          CF_API_KEY: ${{ secrets.CF_API_KEY }}
          TYPE: ${{ steps.detect.outputs.type }}
          BASE: ${{ steps.detect.outputs.base }}
        run: |
          echo "Uploading changed addons..."
          for addon in ${{ steps.detect.outputs.addons }}; do
            addon_path="$BASE/$addon"
            cf_config="$addon_path/.cf.json"

            if [ ! -d "$addon_path" ]; then
              echo "‚ö†Ô∏è Skipping $addon (not a directory)"
              continue
            fi

            if [ ! -f "$cf_config" ]; then
              echo "‚ö†Ô∏è No .cf.json found in $addon_path, skipping..."
              continue
            fi

            projectId=$(jq -r '.projectId' "$cf_config")
            gameVersions=$(jq -c '.gameVersions' "$cf_config")

            if [ -z "$projectId" ] || [ "$projectId" == "null" ]; then
              echo "‚ö†Ô∏è Missing projectId in $cf_config, skipping..."
              continue
            fi

            zipFile="${addon}.zip"
            echo "üì¶ Creating zip for $addon..."
            (cd "$BASE" && zip -r "../$zipFile" "$addon" >/dev/null)

            echo "‚¨ÜÔ∏è Uploading $addon ($TYPE) to CurseForge project $projectId..."
            curl -s -X POST "https://wow.curseforge.com/api/projects/$projectId/upload-file" \
              -H "x-api-token: $CF_API_KEY" \
              -F "metadata={\"changelog\":\"Automated $TYPE build\",\"releaseType\":\"$TYPE\",\"gameVersions\":$gameVersions};type=application/json" \
              -F "file=@$zipFile"

            echo "‚úÖ Uploaded $addon"
          done
